{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchField.js","components/GuessTheTopic.js","components/GuessFlag.js","img/github.svg","img/fb.png","img/insta.png","img/twitter.png","App.js","reportWebVitals.js","index.js"],"names":["Card","img","name","region","capital","languages","population","className","alt","src","CardList","countries","map","country","i","item","toString","console","log","flag","length","SearchField","onValueEntered","value","style","width","type","placeholder","onChange","GuessTheTopic","props","handleClickPlay","topic","state","play","setState","buttonPlayValue","handleKeyDown","event","key","keyCode","guessEntered","readOnly","disabled","sendComponentScore","handleOkButton","onGuessEntered","guess","target","wrongGuess","newCountry","array","randomElement","Math","floor","random","toLowerCase","addScore","this","componentScore","borderStyle","backgroundColor","onClick","onKeyDown","Component","arrayOf3","newPick","handleMouseClick","answer","picturesDisplay","randomFlagArray","forEach","flagsDisplay","wrongAnswer","playAgain","randomArrayOf3","fontSize","backgroundImage","backgroundSize","backgroundPosition","display","color","App","searchedCountry","handlePlayButton","playButton","updateScore","generalScore","handleShowCards","showCards","showCardsButton","selectedTopic","fetch","then","response","json","result","filteredCountries","filter","includes","Object","keys","GuessFlag","href","rel","height","github","margin","fb","twitter","insta","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd954c08.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ img, name, region, capital, languages, population}) => {\n    return(\n        <div className={\"tc pa3 br3 grow shadow-3 tl w-100\"}>\n            <img \n                className={'h4 w5 dib ba b--black-05 pa2'}\n                alt='flag' \n                src={img}\n            />\n            <h2 className={'tc'}>{name}</h2>\n            <hr className=\"mw3 bb bw1 b--black-10\"></hr>\n            <h3>Region: {region}</h3> \n            <h3>Capital: {capital}</h3>\n            <p>Languages: {languages}</p>\n            <p>Population: {population} people</p>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ countries }) => {\n    \n    return (\n        countries.map((country, i) => {\n            const languages = country.languages.map(item => ' ' + item.name).toString();\n            console.log('languages', languages)\n        return (\n            <div className={\"pa3 mr2\"} key={i}>\n                <Card \n                img={country.flag} \n                name={country.name} \n                region={country.region} \n                capital={country.capital.length === 0? \"N/A\" : country.capital }\n                languages={languages}\n                population={country.population}\n                />\n            </div>\n        )\n    })\n    )\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchField = ({ onValueEntered, value }) => {\n    return(\n        <div className={\"tc pa3\"}>\n\n            <input \n                className={\"ba tc br3 pa3\"}\n                style={{width: '300px'}}\n                type=\"text\" \n                placeholder=\"Enter a country name to see info\" \n                onChange = {onValueEntered}\n                value = {value}\n                />\n        </div>\n    )\n}\n\nexport default SearchField;","import React, { Component } from 'react';\n\nclass GuessTheTopic extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomElement: '', \n            play: false,\n            guess: '',\n            guessEntered: false,\n            buttonPlayValue: '',\n            readOnly: false,\n            disabled: false,\n        };\n      }\n\n      componentDidMount() {\n        const { countries, topic } = this.props;\n          this.setState({\n              randomElement: countries[Math.floor(Math.random() * countries.length)],\n              buttonPlayValue: `Guess the ${topic}`\n            })\n      }\n\n      handleClickPlay = () => {\n        const { topic } = this.props;\n        if (!this.state.play) {\n            this.setState({\n                play: true,\n                buttonPlayValue: `Close 'Guess the ${topic}'`\n            });\n            \n        } else {\n            this.setState({\n                play: false,\n                buttonPlayValue: `Guess the ${topic}`\n            })            \n          }                        \n      }\n\n      handleKeyDown = (event) => {\n        if (event.key === 'Enter' || event.keyCode === 13) {\n            this.setState ({guessEntered: true, readOnly: true, disabled: true});\n            this.sendComponentScore(); \n        }\n      }\n\n      handleOkButton = (event) => {\n        this.setState ({guessEntered: true, readOnly: true, disabled: true});\n        this.sendComponentScore(); \n      }\n\n      onGuessEntered = (event) => {\n            this.setState ({guess: event.target.value});\n            // console.log('keys', Object.keys(this.state.randomElement))\n      }\n\n      wrongGuess = () => {\n        this.setState ({guessEntered: false, guess: ''})\n      }\n\n      newCountry = (array) => {\n        this.setState ({\n            guessEntered: false, \n            guess: '',\n            readOnly: false,\n            disabled: false,\n            randomElement: array[Math.floor(Math.random() * array.length)],\n\n        })\n      }\n\n      sendComponentScore = () => {\n       if (this.state.guess.toLowerCase()===this.state.randomElement[this.props.topic].toLowerCase()){\n                this.props.addScore(true);\n            } else {\n                this.props.addScore(false);\n            }\n      }\n\n    render() {\n       const { countries, topic } = this.props;\n       const { \n           randomElement, \n           play, \n           guess, \n           guessEntered, \n           buttonPlayValue, \n           readOnly,\n           disabled\n        } = this.state;\n       console.log('guess', guess, 'random', randomElement[topic]) \n       console.log('score in main: ', this.state.componentScore);\n        return(\n            <div className={\"tc mv3\"}>\n                <button \n                    className={'f3 b link dim br3 ph3 pv3 mb2 dib white shadow-3'}\n                    style={{\n                        borderStyle: 'none', \n                        backgroundColor: 'rgb(0, 94, 102)',\n                        width: '300px'\n                        }}\n                    onClick = {this.handleClickPlay}>\n                    {buttonPlayValue}\n                </button>\n                {\n                    play? \n                    <div>\n                        <div className={'flex justify-center flex-column'}>\n                            <h2 className={'f3 tc mt2 mb3'}><span className={'ttc'}>{topic}</span> of <span className={'underline'}>{randomElement.name}</span>?</h2>\n                        </div>\n                        <input \n                            className={\"ba tc br3 pa3\"}\n                            style={{width: '300px'}}\n                            type=\"text\" \n                            placeholder=\"Write your answer here\" \n                            onChange = {this.onGuessEntered}\n                            onKeyDown = {this.handleKeyDown}                        \n                            value = {guess}\n                            readOnly = {readOnly}\n                            disabled = {disabled}\n                            />\n                        <button \n                            className={'b tc ml2 br3 pa3 bg-light-green shadow-3 self-center'}\n                            style={{\n                                borderStyle: 'none',                                                                \n                                }}\n                            onClick = {() => this.handleOkButton()}\n                            disabled = {disabled}\n                            >\n                        OK\n                        </button>\n                        <button \n                            className={'b tc ml2 br3 pa3 bg-light-red white shadow-3 self-center'}                                            \n                            style={{\n                                borderStyle: 'none'\n                            }}\n                            onClick = {() => this.newCountry(countries)}\n                            >\n                            Don't know. Reload\n                        </button> \n\n                        {\n                            guessEntered?\n                                (guess.toLowerCase()===randomElement[topic].toLowerCase()?\n                                    <div className={'flex justify-center flex-column'}>\n                                        <h2 className={'green mt3 mb2'}>BRAVO! That's right!</h2>  \n                                        <button \n                                            className={'b ba br3 shadow-3 tc mv3 pa3 white bg-navy self-center'}                                            \n                                            onClick = {() => {this.newCountry(countries);}}\n                                            >\n                                            Play again\n                                        </button>   \n                                    </div>\n                                    :\n                                    <div className={'flex justify-center flex-column'}> \n                                            <h2 className={'red mt3 mb2'}>Wrong!</h2>\n                                            <h3 className={'mt1 mb3'}>The {topic} of {randomElement.name} is {randomElement[topic]}!</h3>\n                                            <button \n                                                className={'b a br3 shadow-3 tc mb3 pa3 white bg-navy self-center'}                                            \n                                                onClick = {() => this.newCountry(countries)}\n                                            >\n                                            Play again!\n                                            </button>   \n                                        {/* <button \n                                            className={'ba tc br3 pa3 white bg-light-red self-center'}\n                                            style={{\n                                                borderStyle: 'none', \n                                                marginLeft: '1em',\n                                                width: '250px'\n                                                }}\n                                            onClick = {this.wrongGuess}\n                                        >\n                                            Try again with the same country! \n                                        </button> */}\n                                        \n                                    </div>)\n                                : <div> </div>\n                        }                        \n                    </div> \n                    :\n                    <div></div>\n                }\n             \n            </div>\n        )}\n    \n}\n\nexport default GuessTheTopic;","import React, { Component } from 'react';\n\nclass GuessTheTopic extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomArrayOf3: [],\n            randomElement: '', \n            play: false,\n            guess: '',\n            flagsDisplay: [],\n            guessEntered: false,\n            buttonPlayValue: '',\n            disabled: false\n        };\n      }\n\n      componentDidMount () {\n\n        const { countries } = this.props;\n        this.setState({\n            randomArrayOf3: [countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)]],\n            buttonPlayValue: `Guess the Flag`\n        })\n      }\n\n      handleClickPlay = (arrayOf3) => {\n        if (!this.state.play) {\n            this.setState({\n                play: true,\n                randomElement: arrayOf3[Math.floor(Math.random() * arrayOf3.length)],\n                buttonPlayValue: `Close 'Guess the Flag'`\n            })            \n        } else {\n            this.setState({\n                play: false,\n                buttonPlayValue: `Guess the Flag`\n            })            \n          }            \n      }\n\n      newPick = (arrayOf3) => {\n        this.setState({\n            play: true,\n            randomElement: arrayOf3[Math.floor(Math.random() * arrayOf3.length)],\n            disabled: false\n        })\n     }\n\n      handleMouseClick = (answer) => {\n            this.setState ({guess: answer});\n            this.sendComponentScore(answer.flag);\n      }\n\n      picturesDisplay = (array) => {\n\n        const randomFlagArray = [];\n\n        randomFlagArray[0] = array[Math.floor(Math.random() * array.length)];\n        \n        array.forEach(item => {\n            if (item !== randomFlagArray[0]) {\n                randomFlagArray[1] = item;\n            }\n        });\n\n        array.forEach(item => {\n            if (item !== randomFlagArray[0] && item !== randomFlagArray[1]) \n                randomFlagArray[2] = item\n        });\n        \n            this.setState ({flagsDisplay: randomFlagArray}) ;\n        }\n\n        wrongAnswer = () => {\n            this.setState({guess: '', disabled: false})\n      }\n\n      playAgain = (countries) => {\n        this.setState({\n            randomArrayOf3: [countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)]],\n            guess: '',\n            disabled: false\n        })\n      }\n\n      sendComponentScore = (answer) => {\n          console.log('flag co', answer, this.state.randomElement.flag)\n        this.setState({disabled: true})\n        if (answer===this.state.randomElement.flag) {\n                 this.props.addScore(true);\n             } else {\n                 this.props.addScore(false);\n             }\n       }\n\n    render() {\n       const { countries } = this.props;\n       const { \n           randomElement, \n           play, \n           guess, \n           randomArrayOf3, \n           flagsDisplay, \n           buttonPlayValue,\n           disabled\n        } = this.state;\n       console.log('random of array 3:', randomArrayOf3)\n\n        return(\n            <div className={\"tc mv3\"}>\n                <button \n                    className={'b link dim br3 ph3 pv3 mb2 dib white shadow-3'}\n                    style={{\n                        fontSize: '1.5em', \n                        borderStyle: 'none', \n                        backgroundColor: 'rgb(0, 94, 102)',\n                        width: '300px'\n                        }}\n                    onClick = {() => {this.handleClickPlay(randomArrayOf3); this.picturesDisplay(randomArrayOf3)}}>\n                    {buttonPlayValue}\n                </button>\n                {\n                    play? \n                    <div>                        \n                        <h2 className={'f3 tc mv2'}>Flag of <span className={'underline'}>{randomElement.name}?</span></h2>                        \n                        <div className={'pa3'}>\n                            <button \n                                className={'ba tc mv1 mh1 pa3 ph3 mid-gray'}\n                                style={{\n                                    backgroundImage: `url(${flagsDisplay[0].flag})`,\n                                    backgroundSize: 'cover', \n                                    backgroundPosition: 'center',\n                                    display: 'inline-block',\n                                    width: '200px',\n                                    color: 'rgba(0, 0, 0, 0)',\n                                    fontSize: '3em'\n                                    }}\n                                    onClick = {() => this.handleMouseClick(flagsDisplay[0])}\n                                    disabled={disabled}\n                                >\n                            Flag\n                            </button>\n                            <button \n                                className={'ba tc mv1 mh2 pa3 ph3 mid-gray'}\n                                style={{\n                                    backgroundImage: `url(${flagsDisplay[1].flag})`,\n                                    backgroundSize: 'cover', \n                                    backgroundPosition: 'center',\n                                    display: 'inline-block',\n                                    width: '200px',\n                                    color: 'rgba(0, 0, 0, 0)',\n                                    fontSize: '3em'\n                                    }}\n                                    onClick = {() => this.handleMouseClick(flagsDisplay[1])}\n                                    disabled={disabled}\n                                >\n                            Flag\n                            </button>\n                            <button \n                                className={'ba tc mv1 mh1 pa3 ph3 mid-gray'}\n                                style={{\n                                    backgroundImage: `url(${flagsDisplay[2].flag})`,\n                                    backgroundSize: 'cover', \n                                    backgroundPosition: 'center',\n                                    display: 'inline-block',\n                                    width: '200px',\n                                    color: 'rgba(0, 0, 0, 0)',\n                                    fontSize: '3em'\n                                    }}\n                                    onClick = {() => this.handleMouseClick(flagsDisplay[2])}\n                                    disabled={disabled}\n                                >\n                            Flag\n                            </button>\n                            <div>\n                                <button \n                                    className={'b ba br3 shadow-3 tc mt3 pa3 white bg-light-red self-center'}\n                                    style={{\n                                        borderStyle: 'none',                                                                \n                                        }}\n                                    onClick = {() => {\n                                                this.playAgain(countries); \n                                                this.newPick(randomArrayOf3); \n                                                this.picturesDisplay(randomArrayOf3);}\n                                                }\n                                >\n                                Don't know. Reload\n                                </button>\n                            </div>\n                        </div>\n                        {\n                            guess?\n                                (guess.flag===randomElement.flag ?\n                                    <div className={'flex justify-center flex-column'}>\n                                        <h2 className={'green f3 b mv2'}>BRAVO! That's right!</h2>\n                                        <button \n                                            className={'b ba br3 shadow-3 tc mv3 pa3 white bg-navy self-center'}                                            \n                                            onClick = {() => {\n                                                this.playAgain(countries); \n                                                this.newPick(randomArrayOf3); \n                                                this.picturesDisplay(randomArrayOf3);}\n                                                }\n                                                >\n                                            Play Again\n                                        </button>\n                                    </div>\n                                    :\n                                    <div className={'flex justify-center flex-column'}>\n                                            <h2 className={'red f3 b mv2'}>Wrong! That's the flag of <span className={'underline'}>{guess.name}!</span></h2>\n                                            <button \n                                                className={'b ba br3 shadow-3 tc mv3 pa3 white bg-navy self-center'}                                            \n                                                onClick = {this.wrongAnswer}\n                                            >\n                                            Try Again\n                                            </button>\n                                    </div>)\n                                : <div></div>\n                        }\n                    </div> \n                    :\n                    <div></div>\n                }\n                \n            </div>\n        )\n        }\n    \n}\n\nexport default GuessTheTopic;","export default __webpack_public_path__ + \"static/media/github.d1bb13ce.svg\";","export default __webpack_public_path__ + \"static/media/fb.d1e12fbb.png\";","export default __webpack_public_path__ + \"static/media/insta.9094474d.png\";","export default __webpack_public_path__ + \"static/media/twitter.a429d008.png\";","import React, { Component } from 'react';\nimport CardList from './components/CardList';\nimport SearchField from './components/SearchField';\nimport GuessTheTopic from './components/GuessTheTopic';\nimport GuessFlag from './components/GuessFlag'\n\nimport github from \"./img/github.svg\"; \nimport fb from \"./img/fb.png\"; \nimport insta from \"./img/insta.png\"; \nimport twitter from \"./img/twitter.png\"; \n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        countries: [],\n        searchedCountry: '',\n        play: false,\n        playButton: 'PLAY',\n        selectedTopic: false,\n        showCards: false,\n        showCardsButton: 'SHOW COUNTRIES',\n        generalScore: 0\n    };\n  }\n\n  componentDidMount() {    \n    fetch('https://restcountries.eu/rest/v2/all')\n    .then(response => response.json())\n    .then(result => this.setState({countries: result}))   \n  }\n\n  onValueEntered = (event) => {\n    this.setState ({searchedCountry: event.target.value})\n  }\n\n  handlePlayButton = () => {\n    if (this.state.play) {\n      this.setState({play: false, playButton: 'PLAY'})\n    } else {\n      this.setState({play: true, playButton: 'CLOSE'})\n      }    \n  }\n  \n  updateScore = (componentScore) => {\n    if (componentScore) {\n      this.setState({\n        generalScore: this.state.generalScore + 1\n      })\n    }\n  }\n  \n  handleShowCards = () => {\n    if (!this.state.showCards) {\n      this.setState({showCards: true, showCardsButton: 'HIDE COUNTRIES'})\n    } else {\n      this.setState({showCards: false, showCardsButton: 'SHOW COUNTRIES'})\n    }\n    \n  }\n\n  render() {\n\n    const { countries, searchedCountry, play, playButton, showCards, showCardsButton, generalScore } = this.state;\n    const filteredCountries = countries.filter(country => {\n              return country.name.toLowerCase().includes(searchedCountry.toLowerCase())\n            })    \n\n    return (\n      <div className={\"tc\"}>\n        <h1 className={\"tc\"}>Know your Countries</h1>\n        <h2>Your score: {generalScore}</h2>\n        <button \n            className={'f1 b br3 ph4 pv3 mv3 dib shadow-3 bg-light-green grow'}            \n            onClick = {this.handlePlayButton}>\n           {playButton}\n        </button>\n        {\n          play?\n          <div>\n                <GuessTheTopic \n                  countries= {countries} \n                  topic={Object.keys(countries[0])[5]}    \n                  addScore={this.updateScore}              \n                  />              \n                <GuessTheTopic \n                  countries={countries} \n                  topic={Object.keys(countries[0])[7]} \n                  addScore={this.updateScore}                    \n                  /> \n                <GuessFlag \n                  countries={countries} \n                  addScore={this.updateScore}                      \n                />              \n                <div>\n                    <button\n                    className={'f2 b link grow br3 ph4 pv3 mv2 dib shadow-3 bg-light-green'}                    \n                    onClick={this.handleShowCards}\n                    >\n                      {showCardsButton}\n                    </button>\n                    {\n                      showCards? \n                      <div>\n                          <SearchField onValueEntered={this.onValueEntered} value = {searchedCountry} />\n                          <div className={'flex justify-center flex-wrap'}>\n                            <CardList countries={filteredCountries}/>\n                          </div>\n                      </div>\n                      :\n                      <div></div>\n                    }\n                </div>                \n          </div>\n          :\n          <div></div>\n        }\n                \n        <footer>\n          <div className={'flex justify-center items-end mt4'}>\n            <div className={'ph2'}>\n                <a href=\"https://www.github.com/andragh83/\" target=\"_blank\" rel=\"noopener noreferrer\"><img height=\"30px\" src={github} alt=\"github\" style={{margin: \"10px auto\"}}/></a>\n            </div>\n            <div className={'ph2'}>\n                <a href=\"https://www.facebook.com/andraghstudio/\" target=\"_blank\" rel=\"noopener noreferrer\"><img height=\"30px\" src={fb} alt=\"facebook\" style={{margin: \"10px auto\"}}/></a>\n            </div>\n            <div className={'ph2'}>\n                <a href=\"https://twitter.com/andraghitulescu\" target=\"_blank\" rel=\"noopener noreferrer\"><img height=\"30px\" src={twitter} alt=\"facebook\" style={{margin: \"10px auto\"}}/></a>\n            </div>\n            <div className={'ph2'}>\n                <a href=\"https://www.instagram.com/andragh83/\" target=\"_blank\" rel=\"noopener noreferrer\"><img height=\"30px\" src={insta} alt=\"instagram\" style={{margin: \"10px auto\"}}/></a>\n            </div>\n            </div>\n        </footer> \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}