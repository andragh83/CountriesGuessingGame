{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchField.js","components/GuessTheTopic.js","components/GuessFlag.js","img/github.svg","img/fb.png","img/insta.png","img/twitter.png","App.js","reportWebVitals.js","index.js"],"names":["Card","img","name","region","capital","languages","population","className","alt","src","CardList","countries","map","country","i","item","toString","console","log","flag","length","SearchField","onValueEntered","value","style","width","type","placeholder","onChange","GuessTheTopic","props","handleClickPlay","topic","state","play","setState","buttonPlayValue","handleKeyDown","event","key","keyCode","guessEntered","guess","handleOkButton","onGuessEntered","target","wrongGuess","newCountry","array","randomElement","Math","floor","random","this","borderStyle","backgroundColor","onClick","onKeyDown","toLowerCase","Component","arrayOf3","newPick","handleMouseClick","answer","picturesDisplay","randomFlagArray","forEach","flagsDisplay","wrongAnswer","playAgain","randomArrayOf3","fontSize","backgroundImage","backgroundSize","backgroundPosition","display","color","App","searchedCountry","handlePlayButton","playButton","handleSelectedTopic","selected","selectedTopic","handleShowCards","showCards","showCardsButton","fetch","then","response","json","result","filteredCountries","filter","includes","Object","keys","GuessFlag","href","rel","height","github","margin","fb","twitter","insta","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.745260e1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ img, name, region, capital, languages, population}) => {\n    return(\n        <div className={\"tc pa3 br3 grow shadow-3 tl w-100\"}>\n            <img \n                className={'h4 w5 dib ba b--black-05 pa2'}\n                alt='flag' \n                src={img}\n            />\n            <h2 className={'tc'}>{name}</h2>\n            <hr className=\"mw3 bb bw1 b--black-10\"></hr>\n            <h3>Region: {region}</h3> \n            <h3>Capital: {capital}</h3>\n            <p>Languages: {languages}</p>\n            <p>Population: {population} people</p>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ countries }) => {\n    \n    return (\n        countries.map((country, i) => {\n            const languages = country.languages.map(item => ' ' + item.name).toString();\n            console.log('languages', languages)\n        return (\n            <div className={\"pa3 mr2\"} key={i}>\n                <Card \n                img={country.flag} \n                name={country.name} \n                region={country.region} \n                capital={country.capital.length === 0? \"N/A\" : country.capital }\n                languages={languages}\n                population={country.population}\n                />\n            </div>\n        )\n    })\n    )\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchField = ({ onValueEntered, value }) => {\n    return(\n        <div className={\"tc pa3\"}>\n\n            <input \n                className={\"ba tc br3 pa3\"}\n                style={{width: '300px'}}\n                type=\"text\" \n                placeholder=\"Enter a country name to see info\" \n                onChange = {onValueEntered}\n                value = {value}\n                />\n        </div>\n    )\n}\n\nexport default SearchField;","import React, { Component } from 'react';\n\nclass GuessTheTopic extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomElement: '', \n            play: false,\n            guess: '',\n            guessEntered: false,\n            buttonPlayValue: ''\n        };\n      }\n\n      componentDidMount() {\n        const { countries, topic } = this.props;\n          this.setState({\n              randomElement: countries[Math.floor(Math.random() * countries.length)],\n              buttonPlayValue: `Guess the ${topic}`\n            })\n      }\n\n      handleClickPlay = () => {\n        const { topic } = this.props;\n        if (!this.state.play) {\n            this.setState({\n                play: true,\n                buttonPlayValue: `Close 'Guess the ${topic}'`\n            });\n            \n        } else {\n            this.setState({\n                play: false,\n                buttonPlayValue: `Guess the ${topic}`\n            })            \n          }                        \n      }\n\n      handleKeyDown = (event) => {\n        if (event.key === 'Enter' || event.keyCode === 13) {\n            this.setState ({guessEntered: true, guess: ''})\n        }\n      }\n\n      handleOkButton = (event) => {\n        this.setState ({guessEntered: true})\n      }\n\n      onGuessEntered = (event) => {\n            this.setState ({guess: event.target.value})\n            // console.log('keys', Object.keys(this.state.randomElement))\n      }\n\n      wrongGuess = () => {\n        this.setState ({guessEntered: false, guess: ''})\n      }\n\n      newCountry = (array) => {\n        this.setState ({\n            guessEntered: false, guess: '',\n            randomElement: array[Math.floor(Math.random() * array.length)],\n\n        })\n      }\n\n    render() {\n       const { countries, topic } = this.props;\n       const { randomElement, play, guess, guessEntered, buttonPlayValue } = this.state;\n\n        return(\n            <div className={\"tc mv3\"}>\n                <button \n                    className={'f3 b link dim br3 ph3 pv3 mb2 dib white shadow-3'}\n                    style={{\n                        borderStyle: 'none', \n                        backgroundColor: 'rgb(0, 94, 102)',\n                        width: '300px'\n                        }}\n                    onClick = {this.handleClickPlay}>\n                    {buttonPlayValue}\n                </button>\n                {\n                    play? \n                    <div>\n                        <div className={'flex justify-center flex-column'}>\n                            <h2 className={'f3 tc mt2 mb3'}><span className={'ttc'}>{topic}</span> of <span className={'underline'}>{randomElement.name}</span>?</h2>\n                        </div>\n                        <input \n                            className={\"ba tc br3 pa3\"}\n                            style={{width: '300px'}}\n                            type=\"text\" \n                            placeholder=\"Write your answer here\" \n                            onChange = {this.onGuessEntered}\n                            onKeyDown = {this.handleKeyDown}\n                            value = {guess}\n                            />\n                        <button \n                            className={'b tc ml2 br3 pa3 bg-light-green shadow-3 self-center'}\n                            style={{\n                                borderStyle: 'none',                                                                \n                                }}\n                            onClick = {() => this.handleOkButton()}\n                            >\n                        OK\n                        </button>\n\n                        {\n                            guessEntered?\n                                (guess.toLowerCase()===randomElement[topic].toLowerCase()?\n                                    <div className={'flex justify-center flex-column'}>\n                                        <h2 className={'green mt3 mb2'}>BRAVO! That's right!</h2>  \n                                        <button \n                                            className={'b ba br3 shadow-3 tc mv3 pa3 white bg-navy self-center'}                                            \n                                            onClick = {() => this.newCountry(countries)}\n                                            >\n                                            Play again\n                                        </button>   \n                                    </div>\n                                    :\n                                    <div className={'flex justify-center flex-column'}> \n                                            <h2 className={'red mt3 mb2'}>Wrong!</h2>\n                                            <h3 className={'mt1 mb3'}>The {topic} of {randomElement.name} is {randomElement[topic]}!</h3>\n                                            <button \n                                            className={'b a br3 shadow-3 tc mv3 pa3 white bg-navy self-center'}                                            \n                                            onClick = {() => this.newCountry(countries)}\n                                            >\n                                            Play again!\n                                        </button>   \n                                        {/* <button \n                                            className={'ba tc br3 pa3 white bg-light-red self-center'}\n                                            style={{\n                                                borderStyle: 'none', \n                                                marginLeft: '1em',\n                                                width: '250px'\n                                                }}\n                                            onClick = {this.wrongGuess}\n                                        >\n                                            Try again with the same country! \n                                        </button> */}\n                                        \n                                    </div>)\n                                : <div> </div>\n                        }                        \n                    </div> \n                    :\n                    <div></div>\n                }\n             \n            </div>\n        )}\n    \n}\n\nexport default GuessTheTopic;","import React, { Component } from 'react';\n\nclass GuessTheTopic extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomArrayOf3: [],\n            randomElement: '', \n            play: false,\n            guess: '',\n            flagsDisplay: [],\n            guessEntered: false,\n            buttonPlayValue: ''\n        };\n      }\n\n      componentDidMount () {\n\n        const { countries } = this.props;\n        this.setState({\n            randomArrayOf3: [countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)]],\n            buttonPlayValue: `Guess the Flag`\n        })\n      }\n\n      handleClickPlay = (arrayOf3) => {\n        if (!this.state.play) {\n            this.setState({\n                play: true,\n                randomElement: arrayOf3[Math.floor(Math.random() * arrayOf3.length)],\n                buttonPlayValue: `Close 'Guess the Flag'`\n            })            \n        } else {\n            this.setState({\n                play: false,\n                buttonPlayValue: `Guess the Flag`\n            })            \n          }            \n      }\n\n      newPick = (arrayOf3) => {\n        this.setState({\n            play: true,\n            randomElement: arrayOf3[Math.floor(Math.random() * arrayOf3.length)]\n        })\n     }\n\n      handleMouseClick = (answer) => {\n            this.setState ({guess: answer})\n      }\n\n      picturesDisplay = (array) => {\n\n        const randomFlagArray = [];\n\n        randomFlagArray[0] = array[Math.floor(Math.random() * array.length)];\n        \n        array.forEach(item => {\n            if (item !== randomFlagArray[0]) {\n                randomFlagArray[1] = item;\n            }\n        });\n\n        array.forEach(item => {\n            if (item !== randomFlagArray[0] && item !== randomFlagArray[1]) \n                randomFlagArray[2] = item\n        });\n        \n            this.setState ({flagsDisplay: randomFlagArray}) ;\n        }\n\n        wrongAnswer = () => {\n            this.setState({guess: ''})\n      }\n\n      playAgain = (countries) => {\n        this.setState({\n            randomArrayOf3: [countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)]],\n            guess: ''})\n      }\n\n    render() {\n       const { countries } = this.props;\n       const { randomElement, play, guess, randomArrayOf3, flagsDisplay, buttonPlayValue } = this.state;\n       console.log('random of array 3:', randomArrayOf3)\n\n        return(\n            <div className={\"tc mv3\"}>\n                <button \n                    className={'b link dim br3 ph3 pv3 mb2 dib white shadow-3'}\n                    style={{\n                        fontSize: '1.5em', \n                        borderStyle: 'none', \n                        backgroundColor: 'rgb(0, 94, 102)',\n                        width: '300px'\n                        }}\n                    onClick = {() => {this.handleClickPlay(randomArrayOf3); this.picturesDisplay(randomArrayOf3)}}>\n                    {buttonPlayValue}\n                </button>\n                {\n                    play? \n                    <div>                        \n                        <h2 className={'f3 tc mv2'}>Flag of <span className={'underline'}>{randomElement.name}?</span></h2>                        \n                        <div className={'pa3'}>\n                            <button \n                                className={'ba tc mv1 mh1 pa3 ph3 mid-gray'}\n                                style={{\n                                    backgroundImage: `url(${flagsDisplay[0].flag})`,\n                                    backgroundSize: 'cover', \n                                    backgroundPosition: 'center',\n                                    display: 'inline-block',\n                                    width: '200px',\n                                    color: 'rgba(0, 0, 0, 0)',\n                                    fontSize: '3em'\n                                    }}\n                                    onClick = {() => this.handleMouseClick(flagsDisplay[0])}\n                                >\n                            Flag\n                            </button>\n                            <button \n                                className={'ba tc mv1 mh2 pa3 ph3 mid-gray'}\n                                style={{\n                                    backgroundImage: `url(${flagsDisplay[1].flag})`,\n                                    backgroundSize: 'cover', \n                                    backgroundPosition: 'center',\n                                    display: 'inline-block',\n                                    width: '200px',\n                                    color: 'rgba(0, 0, 0, 0)',\n                                    fontSize: '3em'\n                                    }}\n                                    onClick = {() => this.handleMouseClick(flagsDisplay[1])}\n                                >\n                            Flag\n                            </button>\n                            <button \n                                className={'ba tc mv1 mh1 pa3 ph3 mid-gray'}\n                                style={{\n                                    backgroundImage: `url(${flagsDisplay[2].flag})`,\n                                    backgroundSize: 'cover', \n                                    backgroundPosition: 'center',\n                                    display: 'inline-block',\n                                    width: '200px',\n                                    color: 'rgba(0, 0, 0, 0)',\n                                    fontSize: '3em'\n                                    }}\n                                    onClick = {() => this.handleMouseClick(flagsDisplay[2])}\n                                >\n                            Flag\n                            </button>\n                        </div>\n                        {\n                            guess?\n                                (guess.flag===randomElement.flag ?\n                                    <div className={'flex justify-center flex-column'}>\n                                        <h2 className={'green f3 b mv2'}>BRAVO! That's right!</h2>\n                                        <button \n                                            className={'b ba br3 shadow-3 tc mv3 pa3 white bg-navy self-center'}                                            \n                                            onClick = {() => {\n                                                this.playAgain(countries); \n                                                this.newPick(randomArrayOf3); \n                                                this.picturesDisplay(randomArrayOf3);}\n                                                }\n                                                >\n                                            Play Again\n                                            </button>\n                                    </div>\n                                    :\n                                    <div className={'flex justify-center flex-column'}>\n                                            <h2 className={'red f3 b mv2'}>Wrong! That's the flag of <span className={'underline'}>{guess.name}!</span></h2>\n                                            <button \n                                                className={'b ba br3 shadow-3 tc mv3 pa3 white bg-navy self-center'}                                            \n                                                onClick = {this.wrongAnswer}\n                                            >\n                                            Try Again\n                                            </button>\n                                    </div>)\n                                : <div></div>\n                        }\n                    </div> \n                    :\n                    <div></div>\n                }\n                \n            </div>\n        )\n        }\n    \n}\n\nexport default GuessTheTopic;","export default __webpack_public_path__ + \"static/media/github.d1bb13ce.svg\";","export default __webpack_public_path__ + \"static/media/fb.d1e12fbb.png\";","export default __webpack_public_path__ + \"static/media/insta.9094474d.png\";","export default __webpack_public_path__ + \"static/media/twitter.a429d008.png\";","import React, { Component } from 'react';\nimport CardList from './components/CardList';\nimport SearchField from './components/SearchField';\nimport GuessTheTopic from './components/GuessTheTopic';\nimport GuessFlag from './components/GuessFlag'\n\nimport github from \"./img/github.svg\"; \nimport fb from \"./img/fb.png\"; \nimport insta from \"./img/insta.png\"; \nimport twitter from \"./img/twitter.png\"; \n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        countries: [],\n        searchedCountry: '',\n        play: false,\n        playButton: 'PLAY',\n        selectedTopic: false,\n        showCards: false,\n        showCardsButton: 'SHOW COUNTRIES'\n    };\n  }\n\n  componentDidMount() {    \n    fetch('https://restcountries.eu/rest/v2/all')\n    .then(response => response.json())\n    .then(result => this.setState({countries: result}))   \n  }\n\n  onValueEntered = (event) => {\n    this.setState ({searchedCountry: event.target.value})\n  }\n\n  handlePlayButton = () => {\n    if (this.state.play) {\n      this.setState({play: false, playButton: 'PLAY'})\n    } else {\n      this.setState({play: true, playButton: 'CLOSE'})\n      }    \n  }\n  \n  handleSelectedTopic = (selected, countries) => {\n    this.setState({\n      selectedTopic: selected\n    })\n  }\n  \n  handleShowCards = () => {\n    if (!this.state.showCards) {\n      this.setState({showCards: true, showCardsButton: 'HIDE COUNTRIES'})\n    } else {\n      this.setState({showCards: false, showCardsButton: 'SHOW COUNTRIES'})\n    }\n    \n  }\n\n  render() {\n\n    const { countries, searchedCountry, play, playButton, showCards, showCardsButton } = this.state;\n    const filteredCountries = countries.filter(country => {\n              return country.name.toLowerCase().includes(searchedCountry.toLowerCase())\n            })    \n\n    return (\n      <div className={\"tc\"}>\n        <h1 className={\"tc\"}>Know your Countries</h1>\n        <button \n            className={'f1 b br3 ph4 pv3 mv3 dib shadow-3 bg-light-green grow'}            \n            onClick = {this.handlePlayButton}>\n           {playButton}\n        </button>\n        {\n          play?\n          <div>\n                <GuessTheTopic \n                  countries= {countries} \n                  topic={Object.keys(countries[0])[5]}                  \n                  />              \n                <GuessTheTopic \n                  countries={countries} \n                  topic={Object.keys(countries[0])[7]}                  \n                  /> \n                <GuessFlag \n                  countries={countries}                   \n                />              \n                <div>\n                    <button\n                    className={'f2 b link grow br3 ph4 pv3 mv2 dib shadow-3 bg-light-green'}                    \n                    onClick={this.handleShowCards}\n                    >\n                      {showCardsButton}\n                    </button>\n                    {\n                      showCards? \n                      <div>\n                          <SearchField onValueEntered={this.onValueEntered} value = {searchedCountry} />\n                          <div className={'flex justify-center flex-wrap'}>\n                            <CardList countries={filteredCountries}/>\n                          </div>\n                      </div>\n                      :\n                      <div></div>\n                    }\n                </div>                \n          </div>\n          :\n          <div></div>\n        }\n                \n        <footer>\n          <div className={'flex justify-center items-end mt4'}>\n            <div className={'ph2'}>\n                <a href=\"https://www.github.com/andragh83/\" target=\"_blank\" rel=\"noopener noreferrer\"><img height=\"30px\" src={github} alt=\"github\" style={{margin: \"10px auto\"}}/></a>\n            </div>\n            <div className={'ph2'}>\n                <a href=\"https://www.facebook.com/andraghstudio/\" target=\"_blank\" rel=\"noopener noreferrer\"><img height=\"30px\" src={fb} alt=\"facebook\" style={{margin: \"10px auto\"}}/></a>\n            </div>\n            <div className={'ph2'}>\n                <a href=\"https://twitter.com/andraghitulescu\" target=\"_blank\" rel=\"noopener noreferrer\"><img height=\"30px\" src={twitter} alt=\"facebook\" style={{margin: \"10px auto\"}}/></a>\n            </div>\n            <div className={'ph2'}>\n                <a href=\"https://www.instagram.com/andragh83/\" target=\"_blank\" rel=\"noopener noreferrer\"><img height=\"30px\" src={insta} alt=\"instagram\" style={{margin: \"10px auto\"}}/></a>\n            </div>\n            </div>\n        </footer> \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}