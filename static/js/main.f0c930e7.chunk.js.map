{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchField.js","components/GuessTheTopic.js","components/GuessFlag.js","App.js","reportWebVitals.js","index.js"],"names":["Card","img","name","region","capital","languages","population","className","alt","src","CardList","countries","map","country","i","item","toString","console","log","flag","length","SearchField","onValueEntered","value","type","placeholder","onChange","GuessTheTopic","props","handleClickPlay","topic","state","play","setState","buttonPlayValue","handleKeyDown","event","key","keyCode","guessEntered","handleOkButton","onGuessEntered","guess","target","wrongGuess","newCountry","array","randomElement","Math","floor","random","this","style","fontSize","borderStyle","backgroundColor","width","onClick","textTransform","borderBottom","onKeyDown","marginLeft","toLowerCase","color","paddingTop","margin","Component","arrayOf3","newPick","handleMouseClick","answer","picturesDisplay","randomFlagArray","forEach","flagsDisplay","wrongAnswer","playAgain","randomArrayOf3","marginRight","backgroundImage","backgroundSize","backgroundPosition","display","paddingBottom","fontWeight","App","searchedCountry","handlePlayButton","playButton","handleSelectedTopic","selected","selectedTopic","handleShowCards","showCards","showCardsButton","fetch","then","response","json","result","filteredCountries","filter","includes","Object","keys","GuessFlag","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAoBeA,EAlBF,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,IAAKC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,WACnD,OACI,sBAAKC,UAAW,oCAAhB,UACI,qBACIA,UAAW,+BACXC,IAAI,OACJC,IAAKR,IAET,oBAAIM,UAAW,KAAf,SAAsBL,IACtB,oBAAIK,UAAU,2BACd,0CAAaJ,KACb,2CAAcC,KACd,4CAAeC,KACf,6CAAgBC,EAAhB,iBCUGI,EAtBE,SAAC,GAEd,OAFgC,EAAhBC,UAGFC,KAAI,SAACC,EAASC,GACpB,IAAMT,EAAYQ,EAAQR,UAAUO,KAAI,SAAAG,GAAI,MAAI,IAAMA,EAAKb,QAAMc,WAErE,OADIC,QAAQC,IAAI,YAAab,GAEzB,qBAAKE,UAAW,UAAhB,SACI,cAAC,EAAD,CACAN,IAAKY,EAAQM,KACbjB,KAAMW,EAAQX,KACdC,OAAQU,EAAQV,OAChBC,QAAoC,IAA3BS,EAAQT,QAAQgB,OAAc,MAAQP,EAAQT,QACvDC,UAAWA,EACXC,WAAYO,EAAQP,cAPQQ,OCO7BO,EAfK,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,eAAgBC,EAAY,EAAZA,MACnC,OACI,qBAAKhB,UAAW,SAAhB,SAEI,uBACIA,UAAW,qBACXiB,KAAK,OACLC,YAAY,mCACZC,SAAYJ,EACZC,MAASA,OCiKVI,E,kDAxKX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAkBRC,gBAAkB,WAAO,IACfC,EAAU,EAAKF,MAAfE,MACH,EAAKC,MAAMC,KAOZ,EAAKC,SAAS,CACVD,MAAM,EACNE,gBAAgB,mBAAD,OAAqBJ,EAArB,QARnB,EAAKG,SAAS,CACVD,MAAM,EACNE,gBAAgB,oBAAD,OAAsBJ,EAAtB,SAxBR,EAsCjBK,cAAgB,SAACC,GACG,UAAdA,EAAMC,KAAqC,KAAlBD,EAAME,SAC/B,EAAKL,SAAU,CAACM,cAAc,KAxCnB,EA4CjBC,eAAiB,SAACJ,GAChB,EAAKH,SAAU,CAACM,cAAc,KA7Cf,EAgDjBE,eAAiB,SAACL,GACZ,EAAKH,SAAU,CAACS,MAAON,EAAMO,OAAOpB,SAjDzB,EAqDjBqB,WAAa,WACX,EAAKX,SAAU,CAACM,cAAc,EAAOG,MAAO,MAtD7B,EAyDjBG,WAAa,SAACC,GACZ,EAAKb,SAAU,CACXM,cAAc,EAAOG,MAAO,GAC5BK,cAAeD,EAAME,KAAKC,MAAMD,KAAKE,SAAWJ,EAAM1B,YA1D1D,EAAKW,MAAQ,CACTgB,cAAe,GACff,MAAM,EACNU,MAAO,GACPH,cAAc,EACdL,gBAAiB,IAPN,E,gEAWI,IAAD,EACWiB,KAAKvB,MAA1BjB,EADU,EACVA,UAAWmB,EADD,EACCA,MACjBqB,KAAKlB,SAAS,CACVc,cAAepC,EAAUqC,KAAKC,MAAMD,KAAKE,SAAWvC,EAAUS,SAC9Dc,gBAAgB,mBAAD,OAAqBJ,EAArB,U,+BAkDf,IAAD,SACuBqB,KAAKvB,MAA1BjB,EADF,EACEA,UAAWmB,EADb,EACaA,MADb,EAEgEqB,KAAKpB,MAAnEgB,EAFF,EAEEA,cAAef,EAFjB,EAEiBA,KAAMU,EAFvB,EAEuBA,MAAOH,EAF9B,EAE8BA,aAAcL,EAF5C,EAE4CA,gBAIjD,OAFDjB,QAAQC,IAAI,QAASwB,EAAO,2BAA4BK,EAAcjB,IAGjE,sBAAKvB,UAAW,SAAhB,UACI,wBACIA,UAAW,wCACX6C,MAAO,CACHC,SAAU,QACVC,YAAa,OACbC,gBAAiB,kBACjBC,MAAO,SAEXC,QAAWN,KAAKtB,gBARpB,SASKK,IAGDF,EACA,gCACI,qBAAKzB,UAAW,sBAAhB,SACI,+BAAI,sBAAM6C,MAAO,CAACM,cAAe,cAA7B,SAA6C5B,IAAjD,OAAkE,sBAAMsB,MAAO,CAACO,aAAc,mBAA5B,SAAiDZ,EAAc7C,OAAjI,SAEJ,uBACIK,UAAW,qBACXiB,KAAK,OACLC,YAAY,yBACZC,SAAYyB,KAAKV,eACjBmB,UAAaT,KAAKhB,cAClBZ,MAASmB,IAEb,wBACInC,UAAW,oCACX6C,MAAO,CACHE,YAAa,OACbO,WAAY,OAEhBJ,QAAW,kBAAM,EAAKjB,kBAN1B,gBAWA,wBACIjC,UAAW,8BACX6C,MAAO,CACHE,YAAa,OACbO,WAAY,OAEhBJ,QAAW,kBAAM,EAAKZ,WAAWlC,IANrC,iCAYI4B,EACKG,EAAMoB,gBAAgBf,EAAcjB,GAAOgC,cACxC,sBAAKV,MAAO,CAACW,MAAO,QAASV,SAAU,MAAOW,WAAY,SAA1D,iCAEI,wBACIzD,UAAW,oCACX6C,MAAO,CACHE,YAAa,OACbO,WAAY,OAGhBJ,QAAW,kBAAM,EAAKZ,WAAWlC,IAPrC,2BAaJ,gCACI,mBAAGyC,MAAO,CAACW,MAAO,MAAOV,SAAU,MAAOY,OAAQ,OAAlD,oBAIA,wBACI1D,UAAW,8BACX6C,MAAO,CACHE,YAAa,OACbO,WAAY,OAEhBJ,QAAWN,KAAKP,WANpB,iDAYN,uCAId,+B,GAjKQsB,aCoNbvC,E,kDAlNX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAuBRC,gBAAkB,SAACsC,GACZ,EAAKpC,MAAMC,KAQZ,EAAKC,SAAS,CACVD,MAAM,EACNE,gBAAgB,2BATpB,EAAKD,SAAS,CACVD,MAAM,EACNe,cAAeoB,EAASnB,KAAKC,MAAMD,KAAKE,SAAWiB,EAAS/C,SAC5Dc,gBAAgB,6BA7BT,EA0CjBkC,QAAU,SAACD,GACT,EAAKlC,SAAS,CACVD,MAAM,EACNe,cAAeoB,EAASnB,KAAKC,MAAMD,KAAKE,SAAWiB,EAAS/C,YA7CjD,EAiDjBiD,iBAAmB,SAACC,GACd,EAAKrC,SAAU,CAACS,MAAO4B,KAlDZ,EAqDjBC,gBAAkB,SAACzB,GAElB,IAAM0B,EAAkB,GAExBA,EAAgB,GAAK1B,EAAME,KAAKC,MAAMD,KAAKE,SAAWJ,EAAM1B,SAE5D0B,EAAM2B,SAAQ,SAAA1D,GACTA,IAASyD,EAAgB,KACzBA,EAAgB,GAAKzD,MAI1B+B,EAAM2B,SAAQ,SAAA1D,GACTA,IAASyD,EAAgB,IAAMzD,IAASyD,EAAgB,KACxDA,EAAgB,GAAKzD,MAGzB,EAAKkB,SAAU,CAACyC,aAAcF,KAtEf,EAyEjBG,YAAc,WACZ,EAAK1C,SAAS,CAACS,MAAO,MA1EP,EA6EjBkC,UAAY,SAACjE,GACX,EAAKsB,SAAS,CACV4C,eAAgB,CAAClE,EAAUqC,KAAKC,MAAMD,KAAKE,SAAWvC,EAAUS,SAChDT,EAAUqC,KAAKC,MAAMD,KAAKE,SAAWvC,EAAUS,SAC/CT,EAAUqC,KAAKC,MAAMD,KAAKE,SAAWvC,EAAUS,UAC/DsB,MAAO,MAhFX,EAAKX,MAAQ,CACT8C,eAAgB,GAChB9B,cAAe,GACff,MAAM,EACNU,MAAO,GACPgC,aAAc,GACdnC,cAAc,EACdL,gBAAiB,IATN,E,gEAaK,IAEZvB,EAAcwC,KAAKvB,MAAnBjB,UACRwC,KAAKlB,SAAS,CACV4C,eAAgB,CAAClE,EAAUqC,KAAKC,MAAMD,KAAKE,SAAWvC,EAAUS,SAChDT,EAAUqC,KAAKC,MAAMD,KAAKE,SAAWvC,EAAUS,SAC/CT,EAAUqC,KAAKC,MAAMD,KAAKE,SAAWvC,EAAUS,UAC/Dc,gBAAgB,6B,+BAkEd,IAAD,OACEvB,EAAcwC,KAAKvB,MAAnBjB,UADF,EAEgFwC,KAAKpB,MAAnFgB,EAFF,EAEEA,cAAef,EAFjB,EAEiBA,KAAMU,EAFvB,EAEuBA,MAAOmC,EAF9B,EAE8BA,eAAgBH,EAF9C,EAE8CA,aAAcxC,EAF5D,EAE4DA,gBAGjE,OAFDjB,QAAQC,IAAI,qBAAsB2D,GAG7B,sBAAKtE,UAAW,SAAhB,UACI,wBACIA,UAAW,wCACX6C,MAAO,CACHC,SAAU,QACVC,YAAa,OACbC,gBAAiB,kBACjBC,MAAO,SAEXC,QAAW,WAAO,EAAK5B,gBAAgBgD,GAAiB,EAAKN,gBAAgBM,IARjF,SASK3C,IAGDF,EACA,gCACI,qBAAKzB,UAAW,sBAAhB,SACI,2DAA6B,sBAAM6C,MAAO,CAACO,aAAc,mBAA5B,SAAiDZ,EAAc7C,OAA5F,SAEJ,sBAAKK,UAAW,MAAhB,UACI,wBACIA,UAAW,qBACX6C,MAAO,CACHS,WAAY,QACZiB,YAAa,QACbC,gBAAgB,OAAD,OAASL,EAAa,GAAGvD,KAAzB,KACf6D,eAAgB,QAChBC,mBAAoB,SACpBC,QAAS,eACT1B,MAAO,QACPO,MAAO,mBACPV,SAAU,OAEVI,QAAW,kBAAM,EAAKY,iBAAiBK,EAAa,KAb5D,kBAiBA,wBACInE,UAAW,qBACX6C,MAAO,CACHS,WAAY,QACZiB,YAAa,QACbC,gBAAgB,OAAD,OAASL,EAAa,GAAGvD,KAAzB,KACf6D,eAAgB,QAChBC,mBAAoB,SACpBC,QAAS,eACT1B,MAAO,QACPO,MAAO,mBACPV,SAAU,OAEVI,QAAW,kBAAM,EAAKY,iBAAiBK,EAAa,KAb5D,kBAiBA,wBACInE,UAAW,qBACX6C,MAAO,CACHS,WAAY,QACZiB,YAAa,QACbC,gBAAgB,OAAD,OAASL,EAAa,GAAGvD,KAAzB,KACf6D,eAAgB,QAChBC,mBAAoB,SACpBC,QAAS,eACT1B,MAAO,QACPO,MAAO,mBACPV,SAAU,OAEVI,QAAW,kBAAM,EAAKY,iBAAiBK,EAAa,KAb5D,qBAmBAhC,EACKA,EAAMvB,OAAO4B,EAAc5B,KACxB,sBAAKiC,MAAO,CAACW,MAAO,QAASV,SAAU,QAASW,WAAY,QAASmB,cAAe,QAASC,WAAY,QAAzG,iCAEI,wBACQ7E,UAAW,8BACX6C,MAAO,CACHE,YAAa,OACbO,WAAY,OAEZJ,QAAW,WACP,EAAKmB,UAAUjE,GACf,EAAKyD,QAAQS,GACb,EAAKN,gBAAgBM,IATrC,2BAgBJ,sBAAKzB,MAAO,CAACW,MAAO,MAAOV,SAAU,QAASW,WAAY,QAASmB,cAAe,SAAlF,uCACkC,sBAAM/B,MAAO,CAACO,aAAc,gBAAiByB,WAAY,QAAzD,SAAmE1C,EAAMxC,OAD3G,IAEQ,wBACIK,UAAW,8BACX6C,MAAO,CACHE,YAAa,OACbO,WAAY,OAEhBJ,QAAWN,KAAKwB,YANpB,0BAWV,uCAId,+B,GA3MQT,aC8HbmB,G,wDAvHb,WAAYzD,GAAQ,IAAD,8BACjB,cAAMA,IAkBRN,eAAiB,SAACc,GAChB,EAAKH,SAAU,CAACqD,gBAAiBlD,EAAMO,OAAOpB,SApB7B,EAuBnBgE,iBAAmB,WACb,EAAKxD,MAAMC,KACb,EAAKC,SAAS,CAACD,MAAM,EAAOwD,WAAY,SAExC,EAAKvD,SAAS,CAACD,MAAM,EAAMwD,WAAY,WA3BxB,EAgCnBC,oBAAsB,SAACC,EAAU/E,GAC/B,EAAKsB,SAAS,CACZ0D,cAAeD,KAlCA,EAsCnBE,gBAAkB,WACX,EAAK7D,MAAM8D,UAGd,EAAK5D,SAAS,CAAC4D,WAAW,EAAOC,gBAAiB,sBAFlD,EAAK7D,SAAS,CAAC4D,WAAW,EAAMC,gBAAiB,oBAtCnD,EAAK/D,MAAQ,CACTpB,UAAW,GACX2E,gBAAiB,GACjBtD,MAAM,EACNwD,WAAY,OACZG,eAAe,EACfE,WAAW,EACXC,gBAAiB,qBATJ,E,gEAaE,IAAD,OAClBC,MAAM,wCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAI,EAAKlE,SAAS,CAACtB,UAAWwF,S,+BA+BlC,IAAD,EAC8EhD,KAAKpB,MAAlFpB,EADD,EACCA,UAAW2E,EADZ,EACYA,gBAAiBtD,EAD7B,EAC6BA,KAAMwD,EADnC,EACmCA,WAAYK,EAD/C,EAC+CA,UAAWC,EAD1D,EAC0DA,gBAE3DM,EAAoBzF,EAAU0F,QAAO,SAAAxF,GACjC,OAAOA,EAAQX,KAAK4D,cAAcwC,SAAShB,EAAgBxB,kBAIrE,OADA7C,QAAQC,IAAI,YAAaP,EAAU,IAEjC,sBAAKJ,UAAW,KAAhB,UACE,oBAAIA,UAAW,KAAf,iCACA,wBACIA,UAAW,sCACX6C,MAAO,CAACC,SAAU,MAAOC,YAAa,QACtCG,QAAWN,KAAKoC,iBAHpB,SAIKC,IAGHxD,EACA,gCACM,cAAC,EAAD,CACErB,UAAYA,EACZmB,MAAOyE,OAAOC,KAAK7F,EAAU,IAAI,KAInC,cAAC,EAAD,CACEA,UAAWA,EACXmB,MAAOyE,OAAOC,KAAK7F,EAAU,IAAI,KAInC,cAAC8F,EAAD,CACE9F,UAAWA,IAIb,gCACI,wBACAJ,UAAW,wDACX6C,MAAO,CAACC,SAAU,MAAOC,YAAa,QACtCG,QAASN,KAAKyC,gBAHd,SAKGE,IAIDD,EACA,gCACI,cAAC,EAAD,CAAavE,eAAgB6B,KAAK7B,eAAgBC,MAAS+D,IAC3D,qBAAK/E,UAAW,gCAAhB,SACE,cAAC,EAAD,CAAUI,UAAWyF,SAI3B,8BAOZ,+B,GA9GQlC,cCIHwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f0c930e7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ img, name, region, capital, languages, population}) => {\n    return(\n        <div className={\"tc pa3 br3 grow shadow-3 tl w-100\"}>\n            <img \n                className={'h4 w5 dib ba b--black-05 pa2'}\n                alt='flag' \n                src={img}\n            />\n            <h2 className={'tc'}>{name}</h2>\n            <hr className=\"mw3 bb bw1 b--black-10\"></hr>\n            <h3>Region: {region}</h3> \n            <h3>Capital: {capital}</h3>\n            <p>Languages: {languages}</p>\n            <p>Population: {population} people</p>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ countries }) => {\n    \n    return (\n        countries.map((country, i) => {\n            const languages = country.languages.map(item => ' ' + item.name).toString();\n            console.log('languages', languages)\n        return (\n            <div className={\"pa3 mr2\"} key={i}>\n                <Card \n                img={country.flag} \n                name={country.name} \n                region={country.region} \n                capital={country.capital.length === 0? \"N/A\" : country.capital }\n                languages={languages}\n                population={country.population}\n                />\n            </div>\n        )\n    })\n    )\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchField = ({ onValueEntered, value }) => {\n    return(\n        <div className={\"tc pa3\"}>\n\n            <input \n                className={\"ba tc br3 pa3 w-25\"}\n                type=\"text\" \n                placeholder=\"Enter a country name to see info\" \n                onChange = {onValueEntered}\n                value = {value}\n                />\n        </div>\n    )\n}\n\nexport default SearchField;","import React, { Component } from 'react';\n\nclass GuessTheTopic extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomElement: '', \n            play: false,\n            guess: '',\n            guessEntered: false,\n            buttonPlayValue: ''\n        };\n      }\n\n      componentDidMount() {\n        const { countries, topic } = this.props;\n          this.setState({\n              randomElement: countries[Math.floor(Math.random() * countries.length)],\n              buttonPlayValue: `Play 'Guess the ${topic}'!`\n            })\n      }\n\n      handleClickPlay = () => {\n        const { topic } = this.props;\n        if (!this.state.play) {\n            this.setState({\n                play: true,\n                buttonPlayValue: `Close 'Guess the ${topic}'!`\n            });\n            \n        } else {\n            this.setState({\n                play: false,\n                buttonPlayValue: `Play 'Guess the ${topic}'!`\n            })\n            \n        }\n            \n            \n      }\n\n      handleKeyDown = (event) => {\n        if (event.key === 'Enter' || event.keyCode === 13) {\n            this.setState ({guessEntered: true})\n        }\n      }\n\n      handleOkButton = (event) => {\n        this.setState ({guessEntered: true})\n      }\n\n      onGuessEntered = (event) => {\n            this.setState ({guess: event.target.value})\n            // console.log('keys', Object.keys(this.state.randomElement))\n      }\n\n      wrongGuess = () => {\n        this.setState ({guessEntered: false, guess: ''})\n      }\n\n      newCountry = (array) => {\n        this.setState ({\n            guessEntered: false, guess: '',\n            randomElement: array[Math.floor(Math.random() * array.length)],\n\n        })\n      }\n\n    render() {\n       const { countries, topic } = this.props;\n       const { randomElement, play, guess, guessEntered, buttonPlayValue } = this.state;\n        \n       console.log('guess', guess, 'randomElement GuessTopic', randomElement[topic])\n\n        return(\n            <div className={\"tc pa2\"}>\n                <button \n                    className={'f6 link dim br3 ph3 pv3 mb2 dib white'}\n                    style={{\n                        fontSize: '1.5em', \n                        borderStyle: 'none', \n                        backgroundColor: 'rgb(0, 94, 102)',\n                        width: '300px'\n                        }}\n                    onClick = {this.handleClickPlay}>\n                    {buttonPlayValue}\n                </button>\n                {\n                    play? \n                    <div>\n                        <div className={'flex justify-center'}>\n                            <h2><span style={{textTransform: 'capitalize'}}>{topic}</span> of <span style={{borderBottom: '3px solid black'}}>{randomElement.name}</span>?</h2>\n                        </div>\n                        <input \n                            className={\"ba tc br3 pa3 w-25\"}\n                            type=\"text\" \n                            placeholder=\"Write your answer here\" \n                            onChange = {this.onGuessEntered}\n                            onKeyDown = {this.handleKeyDown}\n                            value = {guess}\n                            />\n                        <button \n                            className={'ba tc br3 pa3 navy bg-light-green'}\n                            style={{\n                                borderStyle: 'none', \n                                marginLeft: '1em'\n                                }}\n                            onClick = {() => this.handleOkButton()}\n                            >\n                        OK\n                        </button>\n                        \n                        <button \n                            className={'ba tc br3 pa3 white bg-navy'}\n                            style={{\n                                borderStyle: 'none', \n                                marginLeft: '1em'\n                                }}\n                            onClick = {() => this.newCountry(countries)}\n                            >\n                        Try another country\n                        </button>\n                        \n                        {\n                            guessEntered?\n                                (guess.toLowerCase()===randomElement[topic].toLowerCase()?\n                                    <div style={{color: 'green', fontSize: '2em', paddingTop: '0.8em'}}>\n                                        BRAVO! That's right! \n                                        <button \n                                            className={'ba tc br3 pa3 white bg-dark-green'}\n                                            style={{\n                                                borderStyle: 'none', \n                                                marginLeft: '1em',\n                            \n                                                }}\n                                            onClick = {() => this.newCountry(countries)}\n                                            >\n                                            Play again\n                                        </button>   \n                                    </div>\n                                    :\n                                    <div>\n                                        <p style={{color: 'red', fontSize: '2em', margin: '1em'}}>\n                                            Wrong! \n                                        </p> \n                                        \n                                        <button \n                                            className={'ba tc br3 pa3 white bg-navy'}\n                                            style={{\n                                                borderStyle: 'none', \n                                                marginLeft: '1em'\n                                                }}\n                                            onClick = {this.wrongGuess}\n                                        >\n                                            Try again with the same country! \n                                        </button>\n                                        \n                                    </div>)\n                                : <div> </div>\n                        }\n                    </div> \n                    :\n                    <div></div>\n                }\n             \n            </div>\n        )\n        }\n    \n}\n\nexport default GuessTheTopic;","import React, { Component } from 'react';\n\nclass GuessTheTopic extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomArrayOf3: [],\n            randomElement: '', \n            play: false,\n            guess: '',\n            flagsDisplay: [],\n            guessEntered: false,\n            buttonPlayValue: ''\n        };\n      }\n\n      componentDidMount () {\n\n        const { countries } = this.props;\n        this.setState({\n            randomArrayOf3: [countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)]],\n            buttonPlayValue: `Play 'Guess the Flag'!`\n        })\n      }\n\n      handleClickPlay = (arrayOf3) => {\n        if (!this.state.play) {\n            this.setState({\n                play: true,\n                randomElement: arrayOf3[Math.floor(Math.random() * arrayOf3.length)],\n                buttonPlayValue: `Close 'Guess the Flag'!`\n            })\n            \n        } else {\n            this.setState({\n                play: false,\n                buttonPlayValue: `Play 'Guess the Flag'!`\n            })\n            \n        }\n            \n      }\n\n      newPick = (arrayOf3) => {\n        this.setState({\n            play: true,\n            randomElement: arrayOf3[Math.floor(Math.random() * arrayOf3.length)]\n        })\n     }\n\n      handleMouseClick = (answer) => {\n            this.setState ({guess: answer})\n      }\n\n      picturesDisplay = (array) => {\n\n       const randomFlagArray = [];\n\n       randomFlagArray[0] = array[Math.floor(Math.random() * array.length)];\n       \n       array.forEach(item => {\n        if (item !== randomFlagArray[0]) {\n            randomFlagArray[1] = item;\n        }\n       });\n\n       array.forEach(item => {\n        if (item !== randomFlagArray[0] && item !== randomFlagArray[1]) \n            randomFlagArray[2] = item\n       });\n       \n        this.setState ({flagsDisplay: randomFlagArray}) ;\n      }\n\n      wrongAnswer = () => {\n        this.setState({guess: ''})\n      }\n\n      playAgain = (countries) => {\n        this.setState({\n            randomArrayOf3: [countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)]],\n            guess: ''})\n      }\n\n\n    render() {\n       const { countries } = this.props;\n       const { randomElement, play, guess, randomArrayOf3, flagsDisplay, buttonPlayValue } = this.state;\n       console.log('random of array 3:', randomArrayOf3)\n\n        return(\n            <div className={\"tc pa2\"}>\n                <button \n                    className={'f6 link dim br3 ph3 pv3 mb2 dib white'}\n                    style={{\n                        fontSize: '1.5em', \n                        borderStyle: 'none', \n                        backgroundColor: 'rgb(0, 94, 102)',\n                        width: '300px'\n                        }}\n                    onClick = {() => {this.handleClickPlay(randomArrayOf3); this.picturesDisplay(randomArrayOf3)}}>\n                    {buttonPlayValue}\n                </button>\n                {\n                    play? \n                    <div>\n                        <div className={'flex justify-center'}>\n                            <h2>Which one is the flag of <span style={{borderBottom: '3px solid black'}}>{randomElement.name}</span>?</h2>\n                        </div>\n                        <div className={'pa3'}>\n                            <button \n                                className={'ba tc pa3 mid-gray'}\n                                style={{\n                                    marginLeft: '0.5em',\n                                    marginRight: '0.5em',\n                                    backgroundImage: `url(${flagsDisplay[0].flag})`,\n                                    backgroundSize: 'cover', \n                                    backgroundPosition: 'center',\n                                    display: 'inline-block',\n                                    width: '200px',\n                                    color: 'rgba(0, 0, 0, 0)',\n                                    fontSize: '3em'\n                                    }}\n                                    onClick = {() => this.handleMouseClick(flagsDisplay[0])}\n                                >\n                            Flag\n                            </button>\n                            <button \n                                className={'ba tc pa3 mid-gray'}\n                                style={{\n                                    marginLeft: '0.5em',\n                                    marginRight: '0.5em',\n                                    backgroundImage: `url(${flagsDisplay[1].flag})`,\n                                    backgroundSize: 'cover', \n                                    backgroundPosition: 'center',\n                                    display: 'inline-block',\n                                    width: '200px',\n                                    color: 'rgba(0, 0, 0, 0)',\n                                    fontSize: '3em'\n                                    }}\n                                    onClick = {() => this.handleMouseClick(flagsDisplay[1])}\n                                >\n                            Flag\n                            </button>\n                            <button \n                                className={'ba tc pa3 mid-gray'}\n                                style={{\n                                    marginLeft: '0.5em',\n                                    marginRight: '0.5em',\n                                    backgroundImage: `url(${flagsDisplay[2].flag})`,\n                                    backgroundSize: 'cover', \n                                    backgroundPosition: 'center',\n                                    display: 'inline-block',\n                                    width: '200px',\n                                    color: 'rgba(0, 0, 0, 0)',\n                                    fontSize: '3em'\n                                    }}\n                                    onClick = {() => this.handleMouseClick(flagsDisplay[2])}\n                                >\n                            Flag\n                            </button>\n                        </div>\n                        {\n                            guess ?\n                                (guess.flag===randomElement.flag ?\n                                    <div style={{color: 'green', fontSize: '2.5em', paddingTop: '0.3em', paddingBottom: '0.3em', fontWeight: 'Bold'}}>\n                                        BRAVO! That's right! \n                                        <button \n                                                className={'ba tc br3 pa3 white bg-navy'}\n                                                style={{\n                                                    borderStyle: 'none', \n                                                    marginLeft: '1em'\n                                                    }}\n                                                    onClick = {() => {\n                                                        this.playAgain(countries); \n                                                        this.newPick(randomArrayOf3); \n                                                        this.picturesDisplay(randomArrayOf3);}\n                                                        }\n                                                >\n                                            Play Again\n                                            </button>\n                                    </div>\n                                    :\n                                    <div style={{color: 'red', fontSize: '1.5em', paddingTop: '0.3em', paddingBottom: '0.3em'}}>\n                                            Wrong! That's the flag of <span style={{borderBottom: '2px solid red', fontWeight: 'Bold'}}>{guess.name}</span>!\n                                            <button \n                                                className={'ba tc br3 pa3 white bg-navy'}\n                                                style={{\n                                                    borderStyle: 'none', \n                                                    marginLeft: '1em'\n                                                    }}\n                                                onClick = {this.wrongAnswer}\n                                            >\n                                            Try Again\n                                            </button>\n                                    </div>)\n                                : <div> </div>\n                        }\n                    </div> \n                    :\n                    <div></div>\n                }\n                \n            </div>\n        )\n        }\n    \n}\n\nexport default GuessTheTopic;","import React, { Component } from 'react';\nimport CardList from './components/CardList';\nimport SearchField from './components/SearchField';\nimport GuessTheTopic from './components/GuessTheTopic';\nimport GuessFlag from './components/GuessFlag'\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        countries: [],\n        searchedCountry: '',\n        play: false,\n        playButton: 'PLAY',\n        selectedTopic: false,\n        showCards: false,\n        showCardsButton: 'See all countries'\n    };\n  }\n\n  componentDidMount() {    \n    fetch('https://restcountries.eu/rest/v2/all')\n    .then(response => response.json())\n    .then(result => this.setState({countries: result}))   \n  }\n\n  onValueEntered = (event) => {\n    this.setState ({searchedCountry: event.target.value})\n  }\n\n  handlePlayButton = () => {\n    if (this.state.play) {\n      this.setState({play: false, playButton: 'PLAY'})\n    } else {\n      this.setState({play: true, playButton: 'CLOSE'})\n    }\n    \n  }\n  \n  handleSelectedTopic = (selected, countries) => {\n    this.setState({\n      selectedTopic: selected\n    })\n  }\n  \n  handleShowCards = () => {\n    if (!this.state.showCards) {\n      this.setState({showCards: true, showCardsButton: 'Hide countries'})\n    } else {\n      this.setState({showCards: false, showCardsButton: 'See all countries'})\n    }\n    \n  }\n\n  render() {\n    const { countries, searchedCountry, play, playButton, showCards, showCardsButton } = this.state;\n    // console.log('state:', this.state.countries)\n    const filteredCountries = countries.filter(country => {\n              return country.name.toLowerCase().includes(searchedCountry.toLowerCase())\n            }\n            )\n    console.log('countries', countries[0])\n    return (\n      <div className={\"tc\"}>\n        <h1 className={\"tc\"}>Know your Countries</h1>\n        <button \n            className={'pa3 ph4 mb3 br3 navy bg-light-green'}\n            style={{fontSize: '3em', borderStyle: 'none'}} \n            onClick = {this.handlePlayButton}>\n            {playButton}\n        </button>\n        {\n          play?\n          <div>\n                <GuessTheTopic \n                  countries= {countries} \n                  topic={Object.keys(countries[0])[5]}\n                  \n                  />\n              \n                <GuessTheTopic \n                  countries={countries} \n                  topic={Object.keys(countries[0])[7]}\n                  \n                  /> \n\n                <GuessFlag \n                  countries={countries} \n                  \n                />\n              \n                <div>\n                    <button\n                    className={'tc f6 link dim br3 ph4 pv3 mb2 dib white bg-light-red'}\n                    style={{fontSize: '2em', borderStyle: 'none'}}\n                    onClick={this.handleShowCards}\n                    >\n                      {showCardsButton}\n                    </button>\n\n                    {\n                      showCards? \n                      <div>\n                          <SearchField onValueEntered={this.onValueEntered} value = {searchedCountry} />\n                          <div className={'flex justify-center flex-wrap'}>\n                            <CardList countries={filteredCountries}/>\n                          </div>\n                      </div>\n                      :\n                      <div></div>\n                      }\n\n                </div>\n                \n          </div>\n          :\n          <div></div>\n        }\n        \n        \n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}