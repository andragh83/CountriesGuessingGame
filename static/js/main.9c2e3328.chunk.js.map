{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchField.js","components/GuessTheTopic.js","components/GuessFlag.js","img/github.svg","img/fb.png","img/insta.png","img/twitter.png","constants.js","containers/App.js","actions.js","reportWebVitals.js","reducers.js","index.js"],"names":["Card","img","name","region","capital","languages","population","className","style","boxShadow","backgroundColor","backdropFilter","alt","src","CardList","countries","map","country","i","item","toString","console","log","flag","length","SearchField","onValueEntered","value","width","type","placeholder","onChange","GuessTheTopic","props","handleClickPlay","topic","state","play","setState","buttonPlayValue","handleKeyDown","event","key","keyCode","guessEntered","readOnly","disabled","sendComponentScore","handleOkButton","onGuessEntered","guess","target","wrongGuess","newCountry","array","randomElement","Math","floor","random","toLowerCase","addScore","this","borderStyle","onClick","onKeyDown","Component","arrayOf3","newPick","handleMouseClick","answer","picturesDisplay","randomFlagArray","forEach","flagsDisplay","wrongAnswer","playAgain","randomArrayOf3","fontSize","backgroundImage","backgroundSize","backgroundPosition","display","color","CHANGE_SEARCH_FIELD","PLAY","SHOW_CARDS","GENERAL_SCORE","REQUEST_COUNTRIES_PENDING","REQUEST_COUNTRIES_SUCCESS","REQUEST_COUNTRIES_FAILED","connect","searchedCountry","searchCountries","playButton","showCards","showCardsButton","requestCountries","isPending","error","dispatch","text","payload","handlePlayButton","handleShowCards","onRequestCountries","fetch","then","response","json","data","catch","useState","generalScore","setGeneralScore","useEffect","updateScore","componentScore","filteredCountries","filter","includes","Object","keys","GuessFlag","href","rel","height","github","margin","fb","twitter","insta","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateSearch","initialStateCountries","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c2e3328.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ img, name, region, capital, languages, population}) => {\n    return(\n        <div \n            className={\"tc pa3 br3 grow shadow-3 tl w-100\"}\n            style={{\n                boxShadow: '0 0 1rem 0 rgba(0, 0, 0, .2)',\n                backgroundColor: 'rgba(255, 255, 255, .15)',\n                backdropFilter: 'blur(5px)'\n            }}\n        >\n            <img \n                className={'h4 w5 dib ba b--black-05 pa2'}\n                alt='flag' \n                src={img}\n            />\n            <h2 className={'tc'}>{name}</h2>\n            <hr className=\"mw3 bb bw1 b--black-10\"></hr>\n            <h3>Region: {region}</h3> \n            <h3>Capital: {capital}</h3>\n            <p>Languages: {languages}</p>\n            <p>Population: {population} people</p>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ countries }) => {\n    \n    return (\n        countries.map((country, i) => {\n            const languages = country.languages.map(item => ' ' + item.name).toString();\n            console.log('languages', languages)\n        return (\n            <div className={\"pa3 mr2\"} key={i}>\n                <Card \n                img={country.flag} \n                name={country.name} \n                region={country.region} \n                capital={country.capital.length === 0? \"N/A\" : country.capital }\n                languages={languages}\n                population={country.population}\n                />\n            </div>\n        )\n    })\n    )\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchField = ({ onValueEntered, value }) => {\n    return(\n        <div className={\"tc pa3\"}>\n\n            <input \n                className={\"ba tc br3 pa3\"}\n                style={{width: '300px'}}\n                type=\"text\" \n                placeholder=\"Enter a country name to see info\" \n                onChange = {onValueEntered}\n                value = {value}\n                />\n        </div>\n    )\n}\n\nexport default SearchField;","import React, { Component } from 'react';\n\nclass GuessTheTopic extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomElement: '', \n            play: false,\n            guess: '',\n            guessEntered: false,\n            buttonPlayValue: '',\n            readOnly: false,\n            disabled: false,\n        };\n      }\n\n      componentDidMount() {\n        const { countries, topic } = this.props;\n          this.setState({\n              randomElement: countries[Math.floor(Math.random() * countries.length)],\n              buttonPlayValue: `Guess the ${topic}`\n            })\n      }\n\n      handleClickPlay = () => {\n        const { topic } = this.props;\n        if (!this.state.play) {\n            this.setState({\n                play: true,\n                buttonPlayValue: `Close 'Guess the ${topic}'`\n            });\n            \n        } else {\n            this.setState({\n                play: false,\n                buttonPlayValue: `Guess the ${topic}`\n            })            \n          }                        \n      }\n\n      handleKeyDown = (event) => {\n        if (event.key === 'Enter' || event.keyCode === 13) {\n            this.setState ({guessEntered: true, readOnly: true, disabled: true});\n            this.sendComponentScore(); \n        }\n      }\n\n      handleOkButton = (event) => {\n        this.setState ({guessEntered: true, readOnly: true, disabled: true});\n        this.sendComponentScore(); \n      }\n\n      onGuessEntered = (event) => {\n            this.setState ({guess: event.target.value});\n            // console.log('keys', Object.keys(this.state.randomElement))\n      }\n\n      wrongGuess = () => {\n        this.setState ({guessEntered: false, guess: ''})\n      }\n\n      newCountry = (array) => {\n        this.setState ({\n            guessEntered: false, \n            guess: '',\n            readOnly: false,\n            disabled: false,\n            randomElement: array[Math.floor(Math.random() * array.length)],\n\n        })\n      }\n\n      sendComponentScore = () => {\n       if (this.state.guess.toLowerCase()===this.state.randomElement[this.props.topic].toLowerCase()){\n                this.props.addScore(true);\n            } else {\n                this.props.addScore(false);\n            }\n      }\n\n    render() {\n       const { countries, topic } = this.props;\n       const { \n           randomElement, \n           play, \n           guess, \n           guessEntered, \n           buttonPlayValue, \n           readOnly,\n           disabled\n        } = this.state;\n        return(\n            <div className={\"tc mv3\"}>\n                <button \n                    className={'f3 link dim br-pill ph3 pv3 mb2 dib shadow-3'}\n                    style={{\n                        borderStyle: 'none', \n                        backgroundColor: '#a8eb12',\n                        width: '300px',\n                        \n                        }}\n                    onClick = {this.handleClickPlay}>\n                    {buttonPlayValue}\n                </button>\n                {\n                    play? \n                    <div>\n                        <div className={'flex justify-center flex-column'}>\n                            <h2 className={'f3 tc mt2 mb3'}><span className={'ttc'}>{topic}</span> of <span className={'underline'}>{randomElement.name}</span>?</h2>\n                        </div>\n                        <input \n                            className={\"ba tc br-pill pa3\"}\n                            style={{width: '300px'}}\n                            type=\"text\" \n                            placeholder=\"Write your answer here\" \n                            onChange = {this.onGuessEntered}\n                            onKeyDown = {this.handleKeyDown}                        \n                            value = {guess}\n                            readOnly = {readOnly}\n                            disabled = {disabled}\n                            />\n                        <button \n                            className={'b tc ml2 br-pill pa3 bg-light-green shadow-3 self-center'}\n                            style={{\n                                borderStyle: 'none',   \n                                backgroundColor: '#00bf72'                                                             \n                                }}\n                            onClick = {() => this.handleOkButton()}\n                            disabled = {disabled}\n                            >\n                        OK\n                        </button>\n                        <button \n                            className={'b ba br-pill shadow-3 tc mt3 ml3 pa3 white self-center'}                                            \n                            style={{\n                                borderStyle: 'none',\n                                backgroundColor: '#008793'\n                            }}\n                            onClick = {() => this.newCountry(countries)}\n                            >\n                            Don't know. Change country\n                        </button> \n\n                        {\n                            guessEntered?\n                                (guess.toLowerCase()===randomElement[topic].toLowerCase()?\n                                    <div className={'flex justify-center flex-column'}>\n                                        <h2 className={'b mt3 mb2'}>BRAVO! That's right!</h2>  \n                                        <button \n                                            className={'b ba br-pill shadow-3 tc mv3 pa3 white bg-navy self-center'}\n                                            style={{\n                                                borderStyle: 'none',\n                                                    }}\n                                            onClick = {() => {this.newCountry(countries);}}\n                                            >\n                                            Play again\n                                        </button>   \n                                    </div>\n                                    :\n                                    <div className={'flex justify-center flex-column'}> \n                                            <h2 className={'b mt3 mb2'}>Keep trying!</h2>\n                                            <h3 className={'mt1 mb3'}>The {topic} of {randomElement.name} is {randomElement[topic]}!</h3>\n                                            <button \n                                                className={'b a br-pill shadow-3 tc mb3 pa3 white bg-navy self-center'}                                            \n                                                onClick = {() => this.newCountry(countries)}\n                                            >\n                                            Play again!\n                                            </button>   \n                                        {/* <button \n                                            className={'ba tc br3 pa3 white bg-light-red self-center'}\n                                            style={{\n                                                borderStyle: 'none', \n                                                marginLeft: '1em',\n                                                width: '250px'\n                                                }}\n                                            onClick = {this.wrongGuess}\n                                        >\n                                            Try again with the same country! \n                                        </button> */}\n                                        \n                                    </div>)\n                                : <div> </div>\n                        }                        \n                    </div> \n                    :\n                    <div></div>\n                }\n             \n            </div>\n        )}\n    \n}\n\nexport default GuessTheTopic;","import React, { Component } from 'react';\n\nclass GuessTheTopic extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomArrayOf3: [],\n            randomElement: '', \n            play: false,\n            guess: '',\n            flagsDisplay: [],\n            guessEntered: false,\n            buttonPlayValue: '',\n            disabled: false\n        };\n      }\n\n      componentDidMount () {\n\n        const { countries } = this.props;\n        this.setState({\n            randomArrayOf3: [countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)]],\n            buttonPlayValue: `Guess the Flag`\n        })\n      }\n\n      handleClickPlay = (arrayOf3) => {\n        if (!this.state.play) {\n            this.setState({\n                play: true,\n                randomElement: arrayOf3[Math.floor(Math.random() * arrayOf3.length)],\n                buttonPlayValue: `Close 'Guess the Flag'`\n            })            \n        } else {\n            this.setState({\n                play: false,\n                buttonPlayValue: `Guess the Flag`\n            })            \n          }            \n      }\n\n      newPick = (arrayOf3) => {\n        this.setState({\n            play: true,\n            randomElement: arrayOf3[Math.floor(Math.random() * arrayOf3.length)],\n            disabled: false\n        })\n     }\n\n      handleMouseClick = (answer) => {\n            this.setState ({guess: answer});\n            this.sendComponentScore(answer.flag);\n      }\n\n      picturesDisplay = (array) => {\n\n        const randomFlagArray = [];\n\n        randomFlagArray[0] = array[Math.floor(Math.random() * array.length)];\n        \n        array.forEach(item => {\n            if (item !== randomFlagArray[0]) {\n                randomFlagArray[1] = item;\n            }\n        });\n\n        array.forEach(item => {\n            if (item !== randomFlagArray[0] && item !== randomFlagArray[1]) \n                randomFlagArray[2] = item\n        });\n        \n            this.setState ({flagsDisplay: randomFlagArray}) ;\n        }\n\n        wrongAnswer = () => {\n            this.setState({guess: '', disabled: false})\n      }\n\n      playAgain = (countries) => {\n        this.setState({\n            randomArrayOf3: [countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)]],\n            guess: '',\n            disabled: false\n        })\n      }\n\n      sendComponentScore = (answer) => {\n          console.log('flag co', answer, this.state.randomElement.flag)\n        this.setState({disabled: true})\n        if (answer===this.state.randomElement.flag) {\n                 this.props.addScore(true);\n             } else {\n                 this.props.addScore(false);\n             }\n       }\n\n    render() {\n       const { countries } = this.props;\n       const { \n           randomElement, \n           play, \n           guess, \n           randomArrayOf3, \n           flagsDisplay, \n           buttonPlayValue,\n           disabled\n        } = this.state;\n       console.log('random of array 3:', randomArrayOf3)\n\n        return(\n            <div className={\"tc mv3\"}>\n                <button \n                    className={'link dim br-pill ph3 pv3 mb2 dib shadow-3'}\n                    style={{\n                        fontSize: '1.5em', \n                        borderStyle: 'none', \n                        backgroundColor: '#a8eb12',\n                        width: '300px'\n                        }}\n                    onClick = {() => {this.handleClickPlay(randomArrayOf3); this.picturesDisplay(randomArrayOf3)}}>\n                    {buttonPlayValue}\n                </button>\n                {\n                    play? \n                    <div>                        \n                        <h2 className={'f3 tc mv2'}>Flag of <span className={'underline'}>{randomElement.name}?</span></h2>                        \n                        <div className={'pa3'}>\n                            <button \n                                className={'ba tc mv1 mh1 pa3 ph3 mid-gray'}\n                                style={{\n                                    backgroundImage: `url(${flagsDisplay[0].flag})`,\n                                    backgroundSize: 'cover', \n                                    backgroundPosition: 'center',\n                                    display: 'inline-block',\n                                    width: '200px',\n                                    color: 'rgba(0, 0, 0, 0)',\n                                    fontSize: '3em'\n                                    }}\n                                    onClick = {() => this.handleMouseClick(flagsDisplay[0])}\n                                    disabled={disabled}\n                                >\n                            Flag\n                            </button>\n                            <button \n                                className={'ba tc mv1 mh2 pa3 ph3 mid-gray'}\n                                style={{\n                                    backgroundImage: `url(${flagsDisplay[1].flag})`,\n                                    backgroundSize: 'cover', \n                                    backgroundPosition: 'center',\n                                    display: 'inline-block',\n                                    width: '200px',\n                                    color: 'rgba(0, 0, 0, 0)',\n                                    fontSize: '3em'\n                                    }}\n                                    onClick = {() => this.handleMouseClick(flagsDisplay[1])}\n                                    disabled={disabled}\n                                >\n                            Flag\n                            </button>\n                            <button \n                                className={'ba tc mv1 mh1 pa3 ph3 mid-gray'}\n                                style={{\n                                    backgroundImage: `url(${flagsDisplay[2].flag})`,\n                                    backgroundSize: 'cover', \n                                    backgroundPosition: 'center',\n                                    display: 'inline-block',\n                                    width: '200px',\n                                    color: 'rgba(0, 0, 0, 0)',\n                                    fontSize: '3em'\n                                    }}\n                                    onClick = {() => this.handleMouseClick(flagsDisplay[2])}\n                                    disabled={disabled}\n                                >\n                            Flag\n                            </button>\n                            <div>\n                                <button \n                                    className={'b ba br-pill shadow-3 tc mt3 pa3 white self-center'}\n                                    style={{\n                                        borderStyle: 'none',   \n                                        backgroundColor: '#008793'                                                             \n                                        }}\n                                    onClick = {() => {\n                                                this.playAgain(countries); \n                                                this.newPick(randomArrayOf3); \n                                                this.picturesDisplay(randomArrayOf3);}\n                                                }\n                                >\n                                Don't know. Reload\n                                </button>\n                            </div>\n                        </div>\n                        {\n                            guess?\n                                (guess.flag===randomElement.flag ?\n                                    <div className={'flex justify-center flex-column'}>\n                                        <h2 className={'f3 b mv2'}>BRAVO! That's right!</h2>\n                                        <button \n                                            className={'b ba br-pill shadow-3 tc mt3 pa3 white bg-navy self-center'}                                            \n                                            onClick = {() => {\n                                                this.playAgain(countries); \n                                                this.newPick(randomArrayOf3); \n                                                this.picturesDisplay(randomArrayOf3);}\n                                                }\n                                                >\n                                            Play Again\n                                        </button>\n                                    </div>\n                                    :\n                                    <div className={'flex justify-center flex-column'}>\n                                            <h2 className={'b f3 b mv2'}>Keep trying! That's the flag of <span className={'underline'}>{guess.name}!</span></h2>\n                                            <button \n                                                className={'b ba br-pill shadow-3 tc mv3 pa3 white bg-navy self-center'}                                            \n                                                onClick = {this.wrongAnswer}\n                                            >\n                                            Try Again\n                                            </button>\n                                    </div>)\n                                : <div></div>\n                        }\n                    </div> \n                    :\n                    <div></div>\n                }\n                \n            </div>\n        )\n        }\n    \n}\n\nexport default GuessTheTopic;","export default __webpack_public_path__ + \"static/media/github.d1bb13ce.svg\";","export default __webpack_public_path__ + \"static/media/fb.d1e12fbb.png\";","export default __webpack_public_path__ + \"static/media/insta.9094474d.png\";","export default __webpack_public_path__ + \"static/media/twitter.a429d008.png\";","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\nexport const PLAY = 'PLAY';\nexport const SHOW_CARDS = 'SHOW_CARDS';\nexport const GENERAL_SCORE = 'GENERAL_SCORE';\nexport const REQUEST_COUNTRIES_PENDING = 'REQUEST_COUNTRIES_PENDING';\nexport const REQUEST_COUNTRIES_SUCCESS = 'REQUEST_COUNTRIES_SUCCESS';\nexport const REQUEST_COUNTRIES_FAILED = 'REQUEST_COUNTRIES_FAILED';","import React, { useState ,useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchField from '../components/SearchField';\nimport GuessTheTopic from '../components/GuessTheTopic';\nimport GuessFlag from '../components/GuessFlag'\n\nimport github from \"../img/github.svg\"; \nimport fb from \"../img/fb.png\"; \nimport insta from \"../img/insta.png\"; \nimport twitter from \"../img/twitter.png\"; \n\nimport './App.css';\n\nimport { setSearchedCountry, setPlay, setShowCards, requestCountries } from '../actions';\n\nconst mapStateToProps = (state) => {\n  return {\n    searchedCountry: state.searchCountries.searchedCountry,\n    play: state.searchCountries.play,\n    playButton: state.searchCountries.playButton,\n    showCards: state.searchCountries.showCards,\n    showCardsButton: state.searchCountries.showCardsButton,\n    \n    countries: state.requestCountries.countries,\n    isPending: state.requestCountries.isPending,\n    error: state.requestCountries.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onValueEntered: (event) => dispatch(setSearchedCountry(event.target.value)),\n    handlePlayButton: () => {dispatch(setPlay())},\n    handleShowCards: () => {dispatch(setShowCards())},\n    onRequestCountries: () => dispatch(requestCountries())\n  }\n}\n\nfunction App(props) {\n  const { countries,\n          searchedCountry, \n          play, \n          playButton,\n          showCards,\n          showCardsButton,\n          onValueEntered, \n          handlePlayButton, \n          handleShowCards,\n        } = props;\n\n  // const [countries, setCountries] = useState([]);\n  // const [searchedCountry, setSearchedCountry] = useState('');\n  // const [play, setPlay] = useState(false);\n  // const [playButton, setPlayButton] = useState('PLAY');\n  // const [showCards, setShowCards] = useState(false);\n  // const [showCardsButton, setShowCardsButton] = useState('SHOW COUNTRIES');\n  const [generalScore, setGeneralScore] = useState(0);\n\n  useEffect(() => {\n    // console.log(props.store.getState());\n    // fetch('https://restcountries.eu/rest/v2/all')\n    // .then(response => response.json())\n    // .then(result => setCountries(result))\n    props.onRequestCountries()   \n  }, [])\n\n  // const onValueEntered = (event) => {\n  //   setSearchedCountry(event.target.value);\n  // }\n\n  // const handlePlayButton = () => {\n  //   if (play) {\n  //     setPlay(false);\n  //     setPlayButton('PLAY'); \n  //   } else {\n  //     setPlay(true);\n  //     setPlayButton('CLOSE');\n  //     }    \n  // }\n  \n  const updateScore = (componentScore) => {\n    if (componentScore) {\n      setGeneralScore(generalScore + 1)\n    }\n  }\n  \n  // const handleShowCards = () => {\n  //   if (!showCards) {\n  //     setShowCards(true);\n  //     setShowCardsButton('HIDE COUNTRIES');\n  //   } else {\n  //     setShowCards(false);\n  //     setShowCardsButton('SHOW COUNTRIES');\n  //   }\n    \n  // }\n\n  \n    const filteredCountries = countries.filter(country => {\n              return country.name.toLowerCase().includes(searchedCountry.toLowerCase())\n            })    \n\n    return (\n      <div className={\"tc\"}>\n        <h1 className={\"tc\"}>Know your Countries</h1>\n        <h2>Your score: {generalScore}</h2>\n        <button \n            className={'f2 br-pill ph4 pv3 mv3 dib shadow-3 grow'}            \n                    style={{\n                        backgroundColor: '#051937', \n                        color: \"#ffffff\",\n                        borderStyle: 'none',\n                        }}\n            onClick = {handlePlayButton}>\n           {playButton}\n        </button>\n        {\n          play?\n          <div>\n                <GuessTheTopic \n                  countries= {countries} \n                  topic={Object.keys(countries[0])[5]}    \n                  addScore={updateScore}              \n                  />              \n                <GuessTheTopic \n                  countries={countries} \n                  topic={Object.keys(countries[0])[7]} \n                  addScore={updateScore}                    \n                  /> \n                <GuessFlag \n                  countries={countries} \n                  addScore={updateScore}                      \n                />              \n                <div>\n                    <button\n                    className={'f3 link grow br-pill ph4 pv3 mv2 dib shadow-3'} \n                    style = {{\n                      backgroundColor: '#004d7a', \n                      color: \"#ffffff\",\n                      borderStyle: 'none',\n                    }}                   \n                    onClick={handleShowCards}\n                    >\n                      {showCardsButton}\n                    </button>\n                    {\n                      showCards? \n                      <div>\n                          <SearchField onValueEntered={onValueEntered} value = {searchedCountry} />\n                          <div className={'flex justify-center flex-wrap'}>\n                            <CardList countries={filteredCountries}/>\n                          </div>\n                      </div>\n                      :\n                      <div></div>\n                    }\n                </div>                \n          </div>\n          :\n          <div></div>\n        }\n                \n        <footer>\n          <div className={'flex justify-center items-end mt4'}>\n            <div className={'ph2'}>\n                <a href=\"https://www.github.com/andragh83/\" target=\"_blank\" rel=\"noopener noreferrer\"><img height=\"30px\" src={github} alt=\"github\" style={{margin: \"10px auto\"}}/></a>\n            </div>\n            <div className={'ph2'}>\n                <a href=\"https://www.facebook.com/andraghstudio/\" target=\"_blank\" rel=\"noopener noreferrer\"><img height=\"30px\" src={fb} alt=\"facebook\" style={{margin: \"10px auto\"}}/></a>\n            </div>\n            <div className={'ph2'}>\n                <a href=\"https://twitter.com/andraghitulescu\" target=\"_blank\" rel=\"noopener noreferrer\"><img height=\"30px\" src={twitter} alt=\"facebook\" style={{margin: \"10px auto\"}}/></a>\n            </div>\n            <div className={'ph2'}>\n                <a href=\"https://www.instagram.com/andragh83/\" target=\"_blank\" rel=\"noopener noreferrer\"><img height=\"30px\" src={insta} alt=\"instagram\" style={{margin: \"10px auto\"}}/></a>\n            </div>\n            </div>\n        </footer> \n\n      </div>\n    );\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { \n    CHANGE_SEARCH_FIELD, \n    PLAY, \n    SHOW_CARDS, \n    GENERAL_SCORE,\n    REQUEST_COUNTRIES_PENDING,\n    REQUEST_COUNTRIES_SUCCESS,\n    REQUEST_COUNTRIES_FAILED\n } from './constants.js';\n\nexport const setSearchedCountry = (text) => ({\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n})\n\nexport const setPlay = (text) => ({\n    type: PLAY,\n    payload: text\n})\n\nexport const setShowCards = (text) => ({\n    type: SHOW_CARDS,\n    payload: text\n})\n\nexport const setGeneralScore = () => ({\n    type: GENERAL_SCORE\n})\n\nexport const requestCountries = () => (dispatch) => {\n    dispatch({type: REQUEST_COUNTRIES_PENDING});\n    fetch('https://restcountries.eu/rest/v2/all')\n    .then(response => response.json())\n    .then(data => dispatch({type: REQUEST_COUNTRIES_SUCCESS, payload: data})) \n    .catch(error => dispatch({type: REQUEST_COUNTRIES_FAILED, payload: error}))\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \n        CHANGE_SEARCH_FIELD, \n        PLAY, \n        SHOW_CARDS, \n        GENERAL_SCORE,\n        REQUEST_COUNTRIES_PENDING,\n        REQUEST_COUNTRIES_SUCCESS,\n        REQUEST_COUNTRIES_FAILED\n     } from './constants.js';\n\nconst initialStateSearch = {\n    searchedCountry: '',\n    play: false,\n    playButton: 'PLAY',\n    showCards: false,\n    showCardsButton: 'SHOW COUNTRIES',\n    generalScore: 0,\n}\n\n\nexport const searchCountries = (state=initialStateSearch, action={}) => {\n    switch(action.type) {\n        case CHANGE_SEARCH_FIELD:{\n            return { ...state, searchedCountry: action.payload};\n        }\n        case PLAY:{ \n            return { \n                ...state, \n                play: !state.play, \n                playButton: state.play? 'PLAY': 'CLOSE'\n                }\n            }\n        case SHOW_CARDS:{\n            return {\n                ...state,\n                showCards: !state.showCards,\n                showCardsButton: state.showCards? 'Show Countries' : 'Hide Countries'\n                }\n            }\n        case GENERAL_SCORE: {\n            return {\n                ...state,\n                generalScore: state.generalScore++\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nconst initialStateCountries = {\n    isPending: false,\n    countries: [],\n    error: ''\n}\n\nexport const requestCountries = (state=initialStateCountries, action={}) => {\n    switch (action.type) {\n        case REQUEST_COUNTRIES_PENDING: {\n            return {\n                ...state,\n                isPending: true\n            }\n        }\n        case REQUEST_COUNTRIES_SUCCESS: {\n            return {\n                ...state,\n                countries: action.payload,\n                isPending: false,\n            }\n        }\n        case REQUEST_COUNTRIES_FAILED: {\n            return {\n                ...state,\n                error: action.payload,\n                isPending: false\n            }\n        }\n    default: \n        return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport { searchCountries, requestCountries } from './reducers';\n\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({searchCountries, requestCountries})\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}